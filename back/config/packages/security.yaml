security:
    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        register:
            pattern: ^/api/user-create
            stateless: true
            security: false
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api_doc:
            pattern: ^/api/doc
            security: false

        login:
            pattern:  ^/api/login_check$
            stateless: true
            provider: app_user_provider
            user_checker: App\Security\UserChecker
            json_login:
                check_path:    /api/login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            stateless: true
            provider:  app_user_provider

            jwt: ~

            refresh_jwt:
                check_path: /api/token/refresh
            entry_point: jwt
            lazy: false
        main:
            lazy: true
            provider: app_user_provider
            entry_point: lexik_jwt_authentication.jwt_manager
 
    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]

    access_control:
        - { path: ^/api/doc, roles: PUBLIC_ACCESS }
        - { path: ^/api/user-create, methods: [ POST ], roles: PUBLIC_ACCESS }
        - { path: ^/api/confirmation-compte/, methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/token/refresh$, roles: PUBLIC_ACCESS }
        - { path: ^/api/login_check$,   roles: PUBLIC_ACCESS }
        - { path: ^/api/login,          roles: PUBLIC_ACCESS }
        - { path: ^/api/forgot-password, methods: [ POST ], roles: PUBLIC_ACCESS }
        - { path: ^/api/reset-password/, methods: [ POST ], roles: PUBLIC_ACCESS }
        - { path: ^/api/quiz/list$, methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/quiz/[0-9]+$, methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/quiz/organized$, methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/quiz/[0-9]+/average-rating$, methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/quiz/[0-9]+/public-leaderboard$, methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/category-quiz, methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/donations, roles: PUBLIC_ACCESS }
        - { path: ^/api/quiz/[0-9]+/edit$, methods: [ GET ], roles: ROLE_USER }
        - { path: ^/api/quiz/[0-9]+$, methods: [ PUT, PATCH ], roles: ROLE_USER }
        - { path: ^/api/quiz/[0-9]+$, methods: [ DELETE ], roles: ROLE_USER }
        
        - { path: ^/api/user$, methods: [ GET ], roles: ROLE_USER }
        - { path: ^/api/user/profile, methods: [ GET ], roles: ROLE_USER }
        - { path: ^/api/user/profile/update, methods: [ PUT, PATCH ], roles: ROLE_USER }
        - { path: ^/api/user/statistics, methods: [ GET ], roles: ROLE_USER }
        - { path: ^/api/user/game-history, methods: [ GET ], roles: ROLE_USER }
        - { path: ^/api/leaderboard, methods: [ GET ], roles: ROLE_USER }
        
        - { path: ^/api/question$, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/question/[0-9]+$, methods: [ PUT, PATCH ], roles: ROLE_USER }
        - { path: ^/api/question/[0-9]+$, methods: [ DELETE ], roles: ROLE_USER }
        
        - { path: ^/api/answer$, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/answer/[0-9]+$, methods: [ PUT, PATCH ], roles: ROLE_USER }
        - { path: ^/api/answer/[0-9]+$, methods: [ DELETE ], roles: ROLE_USER }
        
        - { path: ^/api/user-answer$, methods: [ GET ], roles: ROLE_USER }
        - { path: ^/api/user-answer$, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/user-answer/[0-9]+$, methods: [ PUT, PATCH ], roles: ROLE_USER }
        - { path: ^/api/user-answer/[0-9]+$, methods: [ DELETE ], roles: ROLE_USER }
        - { path: ^/api/user-answer/game-result, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/user-answer/rate-quiz, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/user-answer/leaderboard/quiz/[0-9]+$, methods: [ GET ], roles: ROLE_USER }
        - { path: ^/api/user-answer/quiz/[0-9]+/rating, methods: [ GET ], roles: ROLE_USER }
        
        - { path: ^/api/multiplayer/room/create, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/multiplayer/room/[^/]+/join, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/multiplayer/room/[^/]+/leave, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/multiplayer/room/[^/]+/start, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/multiplayer/room/[^/]+$, methods: [ GET ], roles: ROLE_USER }
        - { path: ^/api/multiplayer/game/[^/]+/answer, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/multiplayer/game/[^/]+/status, methods: [ GET ], roles: ROLE_USER }
        - { path: ^/api/multiplayer/game/[^/]+/end, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/multiplayer/game/[^/]+/trigger-feedback, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/multiplayer/game/[^/]+/next-question, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/multiplayer/invite/[^/]+$, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/multiplayer/rooms/available, methods: [ GET ], roles: ROLE_USER }
        - { path: ^/api/multiplayer/users/available, methods: [ GET ], roles: ROLE_USER }
        - { path: ^/api/multiplayer/groups/company, methods: [ GET ], roles: ROLE_USER }
        - { path: ^/api/multiplayer/members/company, methods: [ GET ], roles: ROLE_USER }
        
        - { path: ^/api/group/my-company, methods: [ GET ], roles: ROLE_USER }
        - { path: ^/api/group/my-groups, methods: [ GET ], roles: ROLE_USER }
        - { path: ^/api/group$, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/group/[0-9]+/add-user, methods: [ POST ], roles: ROLE_USER }
        - { path: ^/api/group/[0-9]+/remove-user/[0-9]+$, methods: [ DELETE ], roles: ROLE_USER }
        
        - { path: ^/api/global-statistics/company/[0-9]+$, methods: [ GET ], roles: ROLE_USER }
        
        - { path: ^/api/badge/initialize, methods: [ POST ], roles: ROLE_USER }



when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
