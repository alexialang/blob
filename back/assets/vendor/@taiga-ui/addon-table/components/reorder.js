/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.39.0.
 * Original file: /npm/@taiga-ui/addon-table@4.36.0/fesm2022/taiga-ui-addon-table-components-reorder.mjs
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{AsyncPipe as t,NgForOf as e}from"@angular/common";import*as n from"@angular/core";import{inject as i,EventEmitter as o,Component as r,ChangeDetectionStrategy as s,Input as a,Output as d}from"@angular/core";import{TUI_TABLE_SHOW_HIDE_MESSAGE as u}from"@taiga-ui/addon-table/tokens";import{TuiButton as c}from"@taiga-ui/core/components/button";import{TuiIcon as l}from"@taiga-ui/core/components/icon";import*as p from"@taiga-ui/kit/components/tiles";import{TUI_TILES_REORDER as m,tuiTilesShift as g,TuiTiles as h}from"@taiga-ui/kit/components/tiles";import{PolymorpheusOutlet as b,PolymorpheusTemplate as y}from"@taiga-ui/polymorpheus";import{tuiCreateToken as v,tuiProvideOptions as f}from"@taiga-ui/cdk/utils/miscellaneous";const k={icons:{hide:"@tui.eye-off",show:"@tui.eye",drag:"@tui.grip-vertical"}},x=v(k);function w(t){return f(x,t,k)}class I{constructor(){this.dragging=!1,this.order=new Map,this.unsortedItems=[],this.options=i(x),this.showHideText$=i(u),this.enabled=[],this.itemsChange=new o,this.enabledChange=new o,this.content=({$implicit:t})=>String(t)}set items(t){t.length===this.unsortedItems.length&&t.every((t=>this.unsortedItems.includes(t)))||(this.unsortedItems=t)}onDrag(){this.dragging=!0}onDrop(){this.dragging&&(this.dragging=!1,this.updateItems())}isEnabled(t){return this.enabled.includes(t)}getIcon(t){return this.isEnabled(t)?this.options.icons.hide:this.options.icons.show}toggle(t){this.enabled=this.isEnabled(t)?this.enabled.filter((e=>e!==t)):this.enabled.concat(t),this.updateEnabled()}move(t,e){const n=this.order.get(t)??t;if(!n&&e<0||n===this.unsortedItems.length-1&&e>0)return;const i=n+e,o=Array.from(this.order.values()).findIndex((t=>t===i));this.order.set(t,i),this.order.set(o,n),this.order=new Map(this.order),this.updateItems()}getSortedItems(){const t=new Array(this.unsortedItems.length);return this.unsortedItems.forEach(((e,n)=>{t[this.order.get(n)??n]=e})),t}updateItems(){this.itemsChange.emit(this.getSortedItems()),this.updateEnabled()}updateEnabled(){const t=this.getSortedItems().filter((t=>this.isEnabled(t)));this.enabled=t,this.enabledChange.emit(t)}static{this.ɵfac=n.ɵɵngDeclareFactory({minVersion:"12.0.0",version:"16.2.12",ngImport:n,type:I,deps:[],target:n.ɵɵFactoryTarget.Component})}static{this.ɵcmp=n.ɵɵngDeclareComponent({minVersion:"14.0.0",version:"16.2.12",type:I,isStandalone:!0,selector:"tui-reorder",inputs:{enabled:"enabled",items:"items",content:"content"},outputs:{itemsChange:"itemsChange",enabledChange:"enabledChange"},host:{listeners:{"focusout.stop":"(0)","pointerdown.zoneless":"onDrag()","document:pointerup.zoneless":"onDrop()"}},providers:[{provide:m,useValue:g}],ngImport:n,template:'<tui-tiles\n    class="t-wrapper"\n    [(order)]="order"\n>\n    <tui-tile\n        *ngFor="let item of unsortedItems; let index = index"\n        [style.order]="order.get(index)"\n    >\n        <div\n            class="t-item"\n            [class.t-item_disabled]="!isEnabled(item)"\n        >\n            <div\n                tuiTileHandle\n                class="t-draggable"\n            >\n                <tui-icon\n                    class="t-icon"\n                    [icon]="options.icons.drag"\n                />\n                <ng-container *polymorpheusOutlet="content as template; context: {$implicit: item, index: index}">\n                    {{ template }}\n                </ng-container>\n            </div>\n            <button\n                appearance="icon"\n                size="xs"\n                tuiIconButton\n                type="button"\n                class="t-button"\n                [iconStart]="getIcon(item)"\n                (click)="toggle(item)"\n                (keydown.arrowDown.prevent)="move(index, 1)"\n                (keydown.arrowUp.prevent)="move(index, -1)"\n            >\n                {{ showHideText$ | async }}\n            </button>\n        </div>\n    </tui-tile>\n</tui-tiles>\n',styles:[":host{display:block;font:var(--tui-font-text-s);padding:.5rem 0;-webkit-user-select:none;user-select:none}.t-wrapper{grid-auto-rows:2rem}.t-draggable{cursor:ns-resize;flex:1 1 auto}.t-item{transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:flex;block-size:2rem;align-items:center;padding:0 .75rem;background:var(--tui-background-base)}.t-item_disabled{opacity:var(--tui-disabled-opacity)}.t-item_disabled .t-button{color:var(--tui-text-primary);opacity:1}.t-item:hover{background:var(--tui-background-base-alt)}.t-item:hover .t-button{opacity:1}.t-icon{margin-right:.5rem;color:var(--tui-text-tertiary);border-width:.25rem}.t-button{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;margin-left:auto;opacity:0}.t-button:focus{opacity:1}\n"],dependencies:[{kind:"pipe",type:t,name:"async"},{kind:"directive",type:e,selector:"[ngFor][ngForOf]",inputs:["ngForOf","ngForTrackBy","ngForTemplate"]},{kind:"directive",type:b,selector:"[polymorpheusOutlet]",inputs:["polymorpheusOutlet","polymorpheusOutletContext"]},{kind:"directive",type:c,selector:"a[tuiButton],button[tuiButton],a[tuiIconButton],button[tuiIconButton]",inputs:["size"]},{kind:"component",type:l,selector:"tui-icon",inputs:["icon","background"]},{kind:"component",type:p.TuiTilesComponent,selector:"tui-tiles",inputs:["debounce","order"],outputs:["orderChange"]},{kind:"component",type:p.TuiTile,selector:"tui-tile",inputs:["width","height"]},{kind:"directive",type:p.TuiTileHandle,selector:"[tuiTileHandle]"}],changeDetection:n.ChangeDetectionStrategy.OnPush})}}n.ɵɵngDeclareClassMetadata({minVersion:"12.0.0",version:"16.2.12",ngImport:n,type:I,decorators:[{type:r,args:[{standalone:!0,selector:"tui-reorder",imports:[t,e,b,y,c,l,h],changeDetection:s.OnPush,providers:[{provide:m,useValue:g}],host:{"(focusout.stop)":"(0)","(pointerdown.zoneless)":"onDrag()","(document:pointerup.zoneless)":"onDrop()"},template:'<tui-tiles\n    class="t-wrapper"\n    [(order)]="order"\n>\n    <tui-tile\n        *ngFor="let item of unsortedItems; let index = index"\n        [style.order]="order.get(index)"\n    >\n        <div\n            class="t-item"\n            [class.t-item_disabled]="!isEnabled(item)"\n        >\n            <div\n                tuiTileHandle\n                class="t-draggable"\n            >\n                <tui-icon\n                    class="t-icon"\n                    [icon]="options.icons.drag"\n                />\n                <ng-container *polymorpheusOutlet="content as template; context: {$implicit: item, index: index}">\n                    {{ template }}\n                </ng-container>\n            </div>\n            <button\n                appearance="icon"\n                size="xs"\n                tuiIconButton\n                type="button"\n                class="t-button"\n                [iconStart]="getIcon(item)"\n                (click)="toggle(item)"\n                (keydown.arrowDown.prevent)="move(index, 1)"\n                (keydown.arrowUp.prevent)="move(index, -1)"\n            >\n                {{ showHideText$ | async }}\n            </button>\n        </div>\n    </tui-tile>\n</tui-tiles>\n',styles:[":host{display:block;font:var(--tui-font-text-s);padding:.5rem 0;-webkit-user-select:none;user-select:none}.t-wrapper{grid-auto-rows:2rem}.t-draggable{cursor:ns-resize;flex:1 1 auto}.t-item{transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:flex;block-size:2rem;align-items:center;padding:0 .75rem;background:var(--tui-background-base)}.t-item_disabled{opacity:var(--tui-disabled-opacity)}.t-item_disabled .t-button{color:var(--tui-text-primary);opacity:1}.t-item:hover{background:var(--tui-background-base-alt)}.t-item:hover .t-button{opacity:1}.t-icon{margin-right:.5rem;color:var(--tui-text-tertiary);border-width:.25rem}.t-button{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;margin-left:auto;opacity:0}.t-button:focus{opacity:1}\n"]}]}],propDecorators:{enabled:[{type:a}],itemsChange:[{type:d}],enabledChange:[{type:d}],items:[{type:a}],content:[{type:a}]}});export{k as TUI_REORDER_DEFAULT_OPTIONS,x as TUI_REORDER_OPTIONS,I as TuiReorder,w as tuiReorderOptionsProvider};export default null;
