/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.39.0.
 * Original file: /npm/@taiga-ui/cdk@4.36.0/fesm2022/taiga-ui-cdk-utils-math.mjs
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
function e(e,n,r){return ngDevMode&&console.assert(!Number.isNaN(e)),ngDevMode&&console.assert(!Number.isNaN(n)),ngDevMode&&console.assert(!Number.isNaN(r)),ngDevMode&&console.assert(r>=n),Math.min(r,Math.max(n,e))}function n(e,n,r){return ngDevMode&&console.assert(!Number.isNaN(e)),ngDevMode&&console.assert(!Number.isNaN(n)),ngDevMode&&console.assert(!Number.isNaN(r)),ngDevMode&&console.assert(n<r),e>=n&&e<r}function r(e,n,r){return ngDevMode&&console.assert(Number.isInteger(n)),ngDevMode&&console.assert(Number.isInteger(r)),ngDevMode&&console.assert(n<=r),Number.isNaN(e)||e<=n?n:e>=r?r:Math.round(e)}function t(e,n){ngDevMode&&console.assert(Number.isFinite(e)),ngDevMode&&console.assert(Number.isFinite(n)),ngDevMode&&console.assert(n>0);const r=e%n;return r<n/2?e-r:e+n-r}function o(e,n,r){if(e===1/0)return e;ngDevMode&&console.assert(!Number.isNaN(e),"Value must be number"),ngDevMode&&console.assert(Number.isInteger(n),"Precision must be integer"),n=Math.min(n,292);const[t,o=""]=`${e}`.split("e"),s=r(Number(`${t}e${Number(o)+n}`));ngDevMode&&console.assert(Number.isSafeInteger(s),"Impossible to correctly round such a large number");const u=`${s}e`.split("e");return Number(`${u[0]}e${Number(u[1])-n}`)}function s(e,n=0){return o(e,n,Math.round)}function u(e,n=0){return o(e,n,Math.ceil)}function c(e,n=0){return o(e,n,Math.floor)}function a(e,n=0){return o(e,n,Math.trunc)}function i(e,n=0){return Number.isSafeInteger(Math.trunc(e*10**n))}function N({value:e,precision:n,method:r}){switch(r){case"ceil":return u(e,n);case"floor":return c(e,n);case"round":return s(e,n);default:return a(e,n)}}function l(...e){return e.reduce(((e,n)=>e+n),0)}function m(e){return e?1:0}function M(e){return parseInt(e,10)}function d(e){return e*Math.PI/180}export{u as tuiCeil,e as tuiClamp,c as tuiFloor,n as tuiInRange,i as tuiIsSafeToRound,r as tuiNormalizeToIntNumber,t as tuiQuantize,s as tuiRound,N as tuiRoundWith,l as tuiSum,m as tuiToInt,M as tuiToInteger,d as tuiToRadians,a as tuiTrunc};export default null;
