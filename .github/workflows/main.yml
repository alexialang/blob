name: CI/CD Pipeline - Tests et Qualité

on:
  push:
    branches: [ main, dev-admin-crud, develop ]
  pull_request:
    branches: [ main, dev-admin-crud, develop ]

jobs:
  test:
    name: Tests et Qualité
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mariadb:10.11
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, intl, pdo_mysql, zip, gd
        coverage: xdebug

    - name: Create .env file
      working-directory: ./back
      run: |
        cat > .env << 'EOF'
        APP_ENV=test
        APP_SECRET=${{ secrets.APP_SECRET }}
        DATABASE_URL=mysql://root:root@127.0.0.1:3306/test_db?serverVersion=10.11.0&charset=utf8mb4
        KERNEL_CLASS=App\Kernel
        SYMFONY_DEPRECATIONS_HELPER=999999
        MERCURE_URL=http://localhost/.well-known/mercure
        MERCURE_PUBLIC_URL=http://localhost/.well-known/mercure
        MERCURE_JWT_TOKEN=test
        MERCURE_JWT_SECRET=test
        MERCURE_PUBLISHER_JWT_KEY=test
        MERCURE_SUBSCRIBER_JWT_KEY=test
        MAILER_DSN=null://null
        MAILER_FROM=test@example.com
        APP_FRONTEND_URL=http://localhost
        CORS_ALLOW_ORIGIN='^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$'
        MESSENGER_TRANSPORT_DSN=doctrine://default?auto_setup=0
        MESSENGER_TRANSPORT_MAILER=null://null
        MESSENGER_TRANSPORT_EXPORT=null://null
        JWT_SECRET_KEY=%kernel.project_dir%/config/jwt/private.pem
        JWT_PUBLIC_KEY=%kernel.project_dir%/config/jwt/public.pem
        JWT_PASSPHRASE=test
        STRIPE_SECRET_KEY=sk_test_fake
        STRIPE_PUBLIC_KEY=pk_test_fake
        RECAPTCHA_SECRET_KEY=test
        EOF

    - name: Install dependencies
      working-directory: ./back
      run: composer install --prefer-dist --no-progress

    - name: Setup test database
      working-directory: ./back
      run: |
        php bin/console doctrine:database:create --env=test --if-not-exists
        php bin/console doctrine:migrations:migrate --env=test --no-interaction

    - name: Run tests
      working-directory: ./back
      run: php bin/phpunit

    - name: Run PHPStan
      working-directory: ./back
      run: vendor/bin/phpstan analyse src/ --level=5

    - name: Run PHP CS Fixer
      working-directory: ./back
      run: vendor/bin/php-cs-fixer fix --dry-run --diff

    - name: Success notification
      run: |
        echo "Pipeline CI/CD terminé"
        echo "Tests exécutés"
        echo "Qualité vérifiée"
        echo "Workflow GitHub Actions fonctionnel"
